{"version":3,"sources":["Header/logo.png","Header/Header.tsx","Main/Sponsors/Sponsors.tsx","Main/Meetups/Meetups.tsx","Main/Main.tsx","Footer/Footer.tsx","serviceWorker.ts","index.tsx","App/App.tsx"],"names":["module","exports","__webpack_require__","p","Header_Header","react_default","a","createElement","href","id","src","logo","alt","className","target","Sponsors_Sponsors","Meetup","props","event","isPast","Date","getTime","time","timestampString","moment","endOf","fromNow","classNames","goWord","key","event_url","name","venue","yes_rsvp_count","Meetups_Meetups","meetupsData","reverse","slice","map","meetupEvent","Meetups_Meetup","meetupsDataString","process","console","log","JSON","parse","Main_Main","Footer_Footer","rel","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4RCIzBC,EAAA,kBACbC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,MACNH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,OAAOC,IAAKC,IAAMC,IAAI,2BAEhCP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,iBACbR,EAAAC,EAAAC,cAAA,KAAGO,OAAO,SAASN,KAAK,sCAAxB,UAGAH,EAAAC,EAAAC,cAAA,KAAGO,OAAO,SAASN,KAAK,qCAAxB,UAGAH,EAAAC,EAAAC,cAAA,KAAGO,OAAO,SAASN,KAAK,oCAAxB,SAGAH,EAAAC,EAAAC,cAAA,KACEO,OAAO,SACPN,KAAK,mHAFP,wBChBSO,eAAA,kBAAOV,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACjCR,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YACXR,EAAAC,EAAAC,cAAA,OAAKG,IAAI,kCACTL,EAAAC,EAAAC,cAAA,OAAKG,IAAI,6BACTL,EAAAC,EAAAC,cAAA,OAAKG,IAAI,6BACTL,EAAAC,EAAAC,cAAA,OAAKG,IAAI,+DCFXM,EAAS,SAACC,GAAgC,IACtCC,EAAUD,EAAVC,MACFC,GAAS,IAAIC,MAAOC,UAAYH,EAAMI,KACtCC,EAAkBC,IAAON,EAAMI,MAAMG,MAAM,OAAOC,UAClDC,EAAa,UAAYR,EAAS,QAAU,WAC5CS,EAAST,EAAS,OAAS,cAC/B,OAAQd,EAAAC,EAAAC,cAAA,OAAKM,UAAWc,EAAYE,IAAKX,EAAMY,WAC3CzB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SAASK,EAAMa,MAC9B1B,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YAAf,gBAA8BK,EAAMc,MAAMD,MAC1C1B,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SAASK,EAAMe,eAA9B,gBAA2DL,EAA3D,IAAqEL,IAClEJ,GAAUd,EAAAC,EAAAC,cAAA,KAAGC,KAAMU,EAAMY,WAAf,wBAAsCP,KAK5CW,EAAA,kBAAO7B,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WAC/BsB,EACEA,EAAYC,UAAUC,MAAM,EAAG,GAAGC,IAAI,SAAAC,GAAW,OAAIlC,EAAAC,EAAAC,cAACiC,EAAD,CAAQX,IAAKU,EAAYT,UAAWZ,MAAOqB,MAChGlC,EAAAC,EAAAC,cAAA,kCAKFkC,EAAoBC,i/UAC1BC,QAAQC,IAAIH,GACZ,IAAMN,EAAoCU,KAAKC,MAAML,GC3BtCM,EAAA,kBACb1C,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACbR,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yBACbR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,UACXR,EAAAC,EAAAC,cAAA,4BADF,IACyBF,EAAAC,EAAAC,cAAA,WADzB,iFAEuC,IACrCF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,mCAAR,6BAEFH,EAAAC,EAAAC,cAAA,KAAGM,UAAU,UACXR,EAAAC,EAAAC,cAAA,4BADF,IACyBF,EAAAC,EAAAC,cAAA,WADzB,4DAEiB,IACfF,EAAAC,EAAAC,cAAA,KACEO,OAAO,SACPN,KAAK,mHAFP,YAHF,2DAYFH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,qBACbR,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,KAAR,oBADT,kTAOAH,EAAAC,EAAAC,cAAA,yDACgD,IAC9CF,EAAAC,EAAAC,cAAA,KACEC,KAAK,gEACLM,OAAO,UAFT,mBAKK,IAPP,0JAYAT,EAAAC,EAAAC,cAAA,yFAEY,IACVF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,uDAAR,gBAHF,KAQAH,EAAAC,EAAAC,cAAA,qDAC4C,IAC1CF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,yDAAR,2BAEK,IAJP,mDAOAH,EAAAC,EAAAC,cAAA,sBACa,IACXF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,gDAAR,kBAEK,IAJP,iEAOAH,EAAAC,EAAAC,cAAA,+MAOFF,EAAAC,EAAAC,cAACQ,EAAD,QCxEWiC,SAAA,kBACb3C,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SAAf,mEAGAR,EAAAC,EAAAC,cAAA,KAAG0C,IAAI,UAAUzC,KAAK,qDACpBH,EAAAC,EAAAC,cAAA,OACEK,IAAI,2BACJF,IAAI,+DCCQwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACLnD,EAAAC,EAAAC,cCHW,kBACbF,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAACyC,EAAD,QDDA,MACAU,SAASC,eAAe,SDgItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d20d58d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3ca731e8.png\";","import React, { Component } from \"react\";\nimport \"./Header.css\";\nimport logo from \"./logo.png\";\n\nexport default () => (\n  <header>\n    <a href=\"./\">\n      <img id=\"logo\" src={logo} alt=\"Typesafe Utrecht home\" />\n    </a>\n    <div className=\"mobileActions\">\n      <a target=\"_blank\" href=\"https://github.com/typesafeutrecht\">\n        Github\n      </a>\n      <a target=\"_blank\" href=\"http://meetup.typesafeutrecht.net\">\n        Meetup\n      </a>\n      <a target=\"_blank\" href=\"http://slack.typesafeutrecht.net\">\n        Slack\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://docs.google.com/forms/d/e/1FAIpQLSfvBCsceH_zZiRWCMPZi54ztpKWMQdz56y1HnnL4JKEao5Ufg/viewform?usp=sf_link\"\n      >\n        Call for speakers\n      </a>\n    </div>\n  </header>\n);\n","import React, { Component } from 'react';\nimport './Sponsors.css';\n\nexport default () => (<div className=\"pre-footer\">\n    <b>SPONSORS</b>\n    <div className=\"sponsors\">\n        <img src=\"/images/sponsors/elsevier.png\"/>\n        <img src=\"/images/sponsors/bdr.png\"/>\n        <img src=\"/images/sponsors/bol.png\"/>\n        <img src=\"/images/sponsors/mindspace.png\"/>\n    </div>\n</div>)\n","import React, { Component } from 'react';\nimport './Meetups.css';\nimport {MeetupEvent} from \"../../../scripts/@types/meetup-api\";\nimport moment  from \"moment\";\n\n\n\nconst Meetup = (props: {event: MeetupEvent}) => {\n  const { event } = props;\n  const isPast = new Date().getTime() > event.time;\n  const timestampString = moment(event.time).endOf('day').fromNow();\n  const classNames = \"meetup\" + (isPast ? ' past' : ' future');\n  const goWord = isPast ? \"went\" : \"are joining\";\n    return (<div className={classNames} key={event.event_url}>\n        <div className=\"title\">{event.name}</div>\n        <div className=\"location\">üìç {event.venue.name}</div>\n        <div className=\"going\">{event.yes_rsvp_count} type ninjas {goWord} { timestampString }</div>\n        { !isPast && <a href={event.event_url}>üóì Join in {timestampString}</a>}\n    </div>);\n};\n\n\nexport default () => (<div className=\"meetups\">\n    { meetupsData ?\n        meetupsData.reverse().slice(0, 4).map(meetupEvent => <Meetup key={meetupEvent.event_url} event={meetupEvent}/> ) :\n        <div>No meetups found </div>\n    }\n</div>)\n\n\nconst meetupsDataString = process.env.REACT_APP_MEETUPS_DATA!;\nconsole.log(meetupsDataString)\nconst meetupsData: MeetupEvent[] | null = JSON.parse(meetupsDataString);","import React, { Component } from \"react\";\nimport \"./Main.css\";\nimport Sponsors from \"./Sponsors/Sponsors\";\nimport Meetups from \"./Meetups/Meetups\";\n\nexport default () => (\n  <div className=\"main\">\n    <Meetups />\n    <div className=\"announcements article\">\n      <p className=\"pinned\">\n        <b>LOCATION WANTED</b> <br /> if your company is in Utrecht and we can\n        have a meetup there, drop me a mail:{\" \"}\n        <a href=\"mailto:mike@typesafeutrecht.net\">mike@typesafeutrecht.net</a>\n      </p>\n      <p className=\"pinned\">\n        <b>SPEAKERS WANTED</b> <br /> if you're interested at presenting ‚Äì\n        please fill in{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSfvBCsceH_zZiRWCMPZi54ztpKWMQdz56y1HnnL4JKEao5Ufg/viewform?usp=sf_link\"\n        >\n          the form\n        </a>\n        ! This could be a great start of your speaking career.\n      </p>\n    </div>\n    <div className=\"manifesto article\">\n      <p>\n        We are <a href=\"/\">Typesafe Utrecht</a>, a meetup group, which welcomes\n        everyone, who has an opinion on strong typing in programming languages.\n        Let's go cross-lingual and discuss the basics of type systems, compare\n        different implementations and follow the newest developments.\n        Developers, computer scientists and all sympathetic are welcome.\n      </p>\n      <p>\n        Our perfect programming world is the world of{\" \"}\n        <a\n          href=\"https://en.wikipedia.org/wiki/Partial_function#Total_function\"\n          target=\"_blank\"\n        >\n          Total Functions\n        </a>{\" \"}\n        where by checking the signature you can immediately be sure of what the\n        function does and doesn't do, because 95% of them don't have any side\n        effects.\n      </p>\n      <p>\n        Where functions can be passed around easily, because they are first\n        class and{\" \"}\n        <a href=\"https://en.wikipedia.org/wiki/Higher-order_function\">\n          higher order\n        </a>\n        .\n      </p>\n      <p>\n        Where types guide the implementation, and{\" \"}\n        <a href=\"https://en.wikipedia.org/wiki/Parametric_polymorphism\">\n          parametric polymorphism\n        </a>{\" \"}\n        helps to create powerful reusable abstractions.\n      </p>\n      <p>\n        Where good{\" \"}\n        <a href=\"https://en.wikipedia.org/wiki/Type_inference\">\n          type inference\n        </a>{\" \"}\n        helps the code to be not only rock-solid, but also beautiful.\n      </p>\n      <p>\n        Fantasy? No, it's functional programming. We need to embrace functional\n        programming in typesafe languages, because it not only greatly improves\n        development experience quality of our programs...\n      </p>\n    </div>\n\n    <Sponsors />\n  </div>\n);\n","import React from \"react\";\nimport \"./Footer.css\";\n\nexport default () => (\n  <div className=\"footer\">\n    <div className=\"quote\">\n      \"Opinion is the medium between knowledge and ignorance.\", Plato\n    </div>\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n      <img\n        alt=\"Creative Commons Licence\"\n        src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\"\n      />\n    </a>\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Footer from \"../Footer/Footer\";\n\nexport default () => (\n  <React.Fragment>\n    <Header />\n    <Main />\n    <Footer />\n  </React.Fragment>\n);\n"],"sourceRoot":""}